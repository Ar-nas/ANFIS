/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ar.nas.gui;

import com.ar.nas.data.handler.MetaData;
import com.ar.nas.manfis.data.AnfisOutput;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author arif
 */
public class ConfusionMatrixFrame extends javax.swing.JFrame {

    TableModel tableModel1;
    TableModel tableModel2;
    JTable jTable1;
    
    public ConfusionMatrixFrame(MetaData metadata, int[][] matrix, AnfisOutput result) {
        makeTableModel(matrix, metadata);
        initComponents();
        setResult(metadata, result.getTruePositive(), result.getTrueNegative(),
                result.getFalsePositive(), result.getFalseNegative(), result.getPrecision(),
                result.getRecall(), result.getFMeasure());
    }
    
    public void setResult(MetaData metadata, int[] TP, int[] TN, int[] FP, int[] FN, 
            double[] precision, double[] recall, double[] specificity) {
        for (int i = 0; i < metadata.nClass(); i++) {
            ArrayList<Integer> l = metadata.getClassCodeFromIndex(i);
            String s = String.valueOf(l.get(0));
            for (int j = 1; j < l.size(); j++) {
                s += "/"+String.valueOf(l.get(j));
            }
            ((DefaultTableModel)jTable3.getModel()).addRow(
                new Object[]{s, metadata.getClassLabelFromIndex(i), TP[i], TN[i], FP[i], FN[i],
                    precision[i], recall[i], specificity[i]}
            );
        }
    }
    
    public void makeTableModel(int[][] matrix, MetaData metadata) {
        
        String[][] row = new String[metadata.nClass()][1];
        for (int i = 0; i < metadata.nClass(); i++) {
            ArrayList<Integer> l = metadata.getClassCodeFromIndex(i);
            row[i][0] = String.valueOf(l.get(0));
            for (int j = 1; j < l.size(); j++) {
                row[i][0] += "/"+String.valueOf(l.get(j));
            }
        }
        
        tableModel1 = new DefaultTableModel(row, 
                new String[] {"<html>\\&nbsp;&nbsp;Predicted<br>&nbsp;\\-----------\\<br>&nbsp;&nbsp;&nbsp;&nbsp;Actual&nbsp;&nbsp;&nbsp;&nbsp;\\"}) {
            @Override
            public Class getColumnClass(int columnIndex) {
                return java.lang.String.class;
            }
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        
        String[] column = new String[metadata.nClass()];
        for (int i = 0; i < metadata.nClass(); i++) {
            ArrayList<Integer> l = metadata.getClassCodeFromIndex(i);
            column[i] = String.valueOf(l.get(0));
            for (int j = 1; j < l.size(); j++) {
                column[i] += "/"+String.valueOf(l.get(j));
            }
        }
        
        Integer[][] row1 = new Integer[metadata.nClass()][metadata.nClass()];
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                row1[i][j] = matrix[i][j];
            }
        }
        
        tableModel2 = new DefaultTableModel(row1, column) {
            @Override
            public Class getColumnClass(int columnIndex) {
                return java.lang.Integer.class;
            }
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };   
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Confusion Matrix");

        jTable2.setModel(tableModel2);
        jScrollPane1.setViewportView(jTable2);
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < jTable2.getColumnCount(); i++) {
            jTable2.getColumnModel().getColumn(i).setPreferredWidth(40);
        }
        jTable2.getTableHeader().setPreferredSize(
            new Dimension(jScrollPane1.getWidth(),50)
        );

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "TP", "TN", "FP", "FN", "Precision", "Recall", "F-measure"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable3);
        jTable3.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable3.getColumnModel().getColumn(0).setPreferredWidth(35);
        jTable3.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTable3.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTable3.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTable3.getColumnModel().getColumn(4).setPreferredWidth(60);
        jTable3.getColumnModel().getColumn(5).setPreferredWidth(60);
        jTable3.getColumnModel().getColumn(6).setPreferredWidth(60);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTable1 = new javax.swing.JTable();
        jTable1.setModel(tableModel1);
        jTable1.setBackground(jTable2.getTableHeader().getBackground());
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(70);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        jTable1.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );

        JViewport viewport = new JViewport();
        viewport.setView(jTable1);
        viewport.setPreferredSize(jTable1.getPreferredSize());
        jScrollPane1.setRowHeaderView(viewport);
        jScrollPane1.setCorner(JScrollPane.UPPER_LEFT_CORNER, jTable1.getTableHeader());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
