/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.arnas.gui;

import com.arnas.manfis.network.rule.membershipFunction.BellMF;
import com.arnas.manfis.network.rule.membershipFunction.GaussianMF;
import com.arnas.manfis.network.rule.membershipFunction.MembershipFunction;
import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author arif
 */
public class MembershipPlotFrame extends javax.swing.JFrame {

    /**
     * Creates new form membershipGraph_Frame
     */
    public MembershipPlotFrame(MembershipFunction[][] mfList) {
        super("Membership function plot");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setSize(480, 700);
        
        //initComponents();
        jTable1 = new JTable(new MembershipPlotTableModel(mfList));
        jTable1.setDefaultRenderer(mfList[0].getClass(), new MembershipPlotCellRenderer());
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        jTable1.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        jTable1.setRowHeight(150);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(400);
        add(new JScrollPane(jTable1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Input", "Before Training", "After Training"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MembershipPlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MembershipPlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MembershipPlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MembershipPlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                int nInput = 4;
                int nRule = 5;
                MembershipFunction[][] mf = new MembershipFunction[nInput][nRule];
                for (int i = 0; i < nInput; i++) {
                    for (int j = 0; j < nRule; j++) {
                        mf[i][j] = new BellMF();
                        double a = 0.4 - 0.04 * nRule;
                        double b = -1 + ((j + 1) * 2.0 - 1.0) / nRule;
                        mf[i][j].setParameters(a, b);
                    }
                }
                //mf[1][0] = new GaussianMF();
                ///mf[1][0].setParameters(-0.5, 8);
                //mf[1][1] = new GaussianMF();
                //mf[1][1].setParameters(0.5, 8);
                new MembershipPlotFrame(mf).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

class MembershipPlotTableModel extends AbstractTableModel {
    private final String[] columnNames = new String[] {"input", "plot"};
    private final Integer[] column1;
    private final MembershipFunction[][] column2;
    
    MembershipPlotTableModel(MembershipFunction[][] mfList) {
        column1 = new Integer[mfList.length];
        for (int i = 0; i < mfList.length; i++) {
            column1[i] = i + 1;
        }
        column2 = mfList;
    }
    
    @Override
    public int getColumnCount() {
        return columnNames.length;
    }

    @Override
    public int getRowCount() {
        return column1.length;
    }

    @Override
    public String getColumnName(int col) {
        return columnNames[col];
    }

    @Override
    public Object getValueAt(int row, int col) {
        if (col == 0) {
            return column1[row];
        } else {
            return column2[row];
        }
    }
    
    @Override
    public Class getColumnClass(int c) {
        if (c == 0) {
            return column1[0].getClass();
        } else {
            return column2[0].getClass();
        }
    }
}

class MembershipPlotCellRenderer extends DefaultTableCellRenderer{
    
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
        boolean isSelected, boolean hasFocus, int row, int column) {
        
        //JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        MembershipPlotPanel gp = new MembershipPlotPanel(400, 150);
        gp.setTitle("", "", "");
        try {
            gp.setMembershipFunction((MembershipFunction[])value);
        } catch (java.lang.ClassCastException ex) {
            
        }
        gp.setXAxis((float)-1, (float)1, (float)0.2);
        gp.setYAxis((float)0, (float)1, (float)0.5);
        gp.setLegend(new String[] {"X1MF1", "X1MF2"}, new float[] {(float)-0.5, (float)0.5});
        gp.displayPlot(true);
        
        if (isSelected) {
          gp.setBackground(table.getSelectionBackground());
        }else{
          gp.setBackground(table.getBackground());
        }
        return gp;
    }
}